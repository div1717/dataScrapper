openapi: 3.0.0
info:
  title: Durian Pay
  version: 1.0.0
paths:
  /health:
    get:
      summary: Check server health
      responses:
        "200":
          description: OK

  /scrape/nykaa:
    get:
      summary: Scrape data from nykaa
      parameters:
        - name: query
          in: query
          description: The keyword to search on nykaa
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: The sorting order (e.g., highToLow)
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK

  /scrape/flipkart:
    get:
      summary: Scrape data from flipkart
      parameters:
        - name: query
          in: query
          description: The keyword to search on flipkart
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: The sorting order (e.g., highToLow)
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK

  /scrape/amazon:
    get:
      summary: Scrape data from amazon
      parameters:
        - name: query
          in: query
          description: The keyword to search on amazon
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: The sorting order (e.g., highToLow)
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK

  /scrape/jiomart:
    get:
      summary: Scrape data from jiomart
      parameters:
        - name: query
          in: query
          description: The keyword to search on jiomart
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: The sorting order (e.g., highToLow)
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK

  /scrape/snapdeal:
    get:
      summary: Scrape data from Snapdeal
      parameters:
        - name: query
          in: query
          description: The keyword to search on Snapdeal
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: The sorting order (e.g., highToLow)
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
